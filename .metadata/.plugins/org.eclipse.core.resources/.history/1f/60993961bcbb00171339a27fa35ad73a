package cn.itcast.estore.dao.impl;

import java.sql.Connection;

import org.apache.commons.dbutils.QueryRunner;

import cn.itcast.estore.dao.OrderDao;
import cn.itcast.estore.domain.Order;
import cn.itcast.estore.domain.OrderItem;
import cn.itcast.estore.utils.JdbcUtils;

public class OrderDaoImpl implements OrderDao {

	//订单表的所有字段
	private static final String ORDER_FIELDS = " oid,ordertime,total,state,address,name,telephone,uid ";
	
	//订单项表的所有字段
	private static final String ORDER_ITEM_FIELDS = " oid,pid,count,subtotal "; 

	//把订单的信息写入数据库,因为此方法执行时是事物的,所以创建QR对象不能传入连接池
	@Override
	public void inserOrder(Order order) throws Exception {
		QueryRunner runner = new QueryRunner();
		//因为ordertime是时间戳类型，所以在插入数据时不给值，默认就是当前时间。
		String sql = "insert into tb_order("+ORDER_FIELDS.replace("ordertime,", "")+") values(?,?,?,?,?,?,?)";
		//为了实现事物,得到当前线程绑定的连接对象
		Connection conn = JdbcUtils.getConnection();
		
		int r = runner.update(conn, sql,
				order.getOid(),
				order.getTotal(),
				order.getState(),
				order.getAddress(),
				order.getName(),
				order.getTelephone(),
				order.getUid()
			);
		if(r==0){
			throw new Exception("添加订单信息失败: "+ order);
		}
	}

	
	@Override
	public void insertOrderItem(OrderItem[] orderItems) throws Exception {
		QueryRunner runner = new QueryRunner();
		String sql = "insert into tb_orderitem("+ORDER_ITEM_FIELDS+") values(?,?,?,?)";
		Connection conn = JdbcUtils.getConnection();
		
		//创建一个保存所有参数的二维数组,要插入多少条数据,二维数组就有多少行,每条要记录多少个字段,二维数组就有多少列
		Object[][] params = new Object[orderItems.length][4];
		//遍历传入的订单项数组,给要执行的SQL语句时的参数数组赋值
		for (int i = 0; i < orderItems.length; i++) {
			params[i][0] = orderItems[i].getOid();
			params[i][1] = orderItems[i].getPid();
			params[i][2] = orderItems[i].getCount();
			params[i][3] = orderItems[i].getSubtotal();
 		}
		//批量执行
		int[] r = runner.batch(conn, sql, params);
		for (int i = 0; i < r.length; i++) {
			if(r[i]==0){
				throw new Exception("添加订单项失败"+orderItems[i]);
			}
		}

	}

}
